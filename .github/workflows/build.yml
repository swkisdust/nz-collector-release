name: Release

on:
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        arch: [aarch64, arm, armhf, i686, loongarch64, mips64el, mipsel, ppc, ppc64, ppc64le, riscv64, x86_64]
      
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download toolchains
        run: |
          case "${{ matrix.arch }}" in
            "arm")
              echo "TOOLCHAIN_NAME=arm-linux-musleabi-cross" >> $GITHUB_ENV
              ;;
            "armhf")
              echo "TOOLCHAIN_NAME=arm-linux-musleabihf-cross" >> $GITHUB_ENV
              ;;
            "x86_64")
              echo "TOOLCHAIN_NAME=x86_64-linux-musl-native" >> $GITHUB_ENV
              ;;
            "loongarch64")
              echo "TOOLCHAIN_NAME=loongarch64-unknown-linux-musl" >> $GITHUB_ENV
              ;;
            *)
              echo "TOOLCHAIN_NAME=${{ matrix.arch }}-linux-musl-cross" >> $GITHUB_ENV
              ;;
          esac
          if [ "${{ matrix.arch }}" = loongarch64 ]; then
            wget -q https://github.com/musl-cross/musl-cross/releases/download/20240603/${TOOLCHAIN_NAME}.tgz
          else
            wget -q https://musl.cc/${TOOLCHAIN_NAME}.tgz
          fi
          sudo mkdir /opt/toolchains
          sudo tar -zxf ${TOOLCHAIN_NAME}.tgz -C /opt/toolchains
          rm ${TOOLCHAIN_FILE}

      - name: Install libprotobuf-c
        run: |
          export PLATFORM=$(echo $TOOLCHAIN_NAME | sed 's/-\(native\|cross\)//')
          wget https://github.com/protobuf-c/protobuf-c/releases/download/v1.5.0/protobuf-c-1.5.0.tar.gz
          tar -zxf protobuf-c-1.5.0.tar.gz
          cd ./protobuf-c
          ./configure --disable-shared --enable-static --disable-protoc --disable-largefile --prefix=/opt/toolchains/${TOOLCHAIN_NAME} --host=${PLATFORM}
          make -j${nproc}
          sudo make install
      
      - name: Build collector
        run: |
          git clone https://git.kuzu.uk/nz-collector.git/
          cd nz-collector
          echo "VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_ENV
          mkdir build && cd build
          cmake -DCMAKE_TOOLCHAIN_FILE=../../cmake/${{ matrix.arch }}_musl.cmake -DENABLE_STATIC=1 ..
          make
          mv collector collector_${{ matrix.arch }}
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nz-collector_${{ matrix.arch }}
          path: |
            ./nz-collector/build/collector_${{ matrix.arch }}

      - name: Upload assets to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          files: |
            ./nz-collector/build/collector_${{ matrix.arch }}


          